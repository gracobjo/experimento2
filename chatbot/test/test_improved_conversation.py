#!/usr/bin/env python3
"""
Script para probar la conversaci√≥n mejorada del chatbot
Verifica que se corrijan los problemas identificados
"""

import requests
import json
import time

def test_improved_conversation():
    """Prueba la conversaci√≥n mejorada del chatbot"""
    
    chatbot_url = "http://localhost:8000"
    
    print("üß™ PRUEBA DE CONVERSACI√ìN MEJORADA")
    print("=" * 50)
    
    # Verificar que el chatbot est√© funcionando
    try:
        health_response = requests.get(f"{chatbot_url}/health", timeout=5)
        print(f"‚úÖ Chatbot salud: {health_response.status_code}")
    except Exception as e:
        print(f"‚ùå Error conectando al chatbot: {e}")
        print("   Ejecuta: python main_improved_fixed.py")
        return
    
    # Conversaci√≥n que reproduce los problemas identificados
    conversation = [
        ("Hola", "Saludo inicial"),
        ("quer√≠a hablar con un abogado", "Solicitud de contacto con abogado"),
        ("laboral", "Menciona √°rea espec√≠fica"),
        ("Derecho Laboral", "Confirma √°rea espec√≠fica"),
        ("despido", "Menciona motivo espec√≠fico"),
        ("si", "Respuesta afirmativa - deber√≠a iniciar citas"),
        ("si", "Segunda respuesta afirmativa - deber√≠a iniciar citas"),
        ("si", "Tercera respuesta afirmativa - deber√≠a iniciar citas"),
        ("quiero una cita", "Solicitud directa de cita"),
        ("jjj ggg ccc", "Nombre completo"),
        ("62", "Edad"),
        ("gracobjo@gmail.com", "Email en lugar de tel√©fono"),
        ("666666666", "Tel√©fono correcto"),
        ("gracobjo@gmail.com", "Email"),
        ("laboral", "Motivo espec√≠fico"),
        ("laboral", "Confirma √°rea"),
        ("5", "Selecciona fecha"),
        ("si", "Confirma cita")
    ]
    
    print(f"\nüí¨ Probando conversaci√≥n mejorada...")
    print("-" * 50)
    
    user_id = "test_improved_123"
    conversation_history = []
    
    for i, (message, description) in enumerate(conversation, 1):
        print(f"\n{i}. {description}: '{message}'")
        
        try:
            response = requests.post(
                f"{chatbot_url}/chat",
                json={
                    "text": message,
                    "language": "es",
                    "user_id": user_id
                },
                timeout=15
            )
            
            if response.status_code == 200:
                result = response.json()
                bot_response = result.get('response', 'Sin respuesta')
                print(f"   ü§ñ Respuesta: {bot_response[:100]}...")
                
                # Verificar mejoras espec√≠ficas
                if i == 6 and "nombre completo" in bot_response.lower():
                    print(f"   ‚úÖ MEJORA: Inicia flujo de citas correctamente")
                elif i == 7 and "nombre completo" in bot_response.lower():
                    print(f"   ‚úÖ MEJORA: Mantiene flujo de citas")
                elif i == 8 and "nombre completo" in bot_response.lower():
                    print(f"   ‚úÖ MEJORA: No se repite")
                elif i == 12 and "tel√©fono" in bot_response.lower():
                    print(f"   ‚úÖ MEJORA: Detecta email en lugar de tel√©fono")
                elif i == 15 and "despido" in bot_response.lower():
                    print(f"   ‚úÖ MEJORA: Acepta motivo espec√≠fico")
                elif i == 16 and "fecha" in bot_response.lower():
                    print(f"   ‚úÖ MEJORA: No pregunta √°rea dos veces")
                elif i == 18 and "agendada exitosamente" in bot_response.lower():
                    print(f"   ‚úÖ √âXITO: Cita creada correctamente")
                
                # Verificar problemas corregidos
                if "Para responder adecuadamente" in bot_response and i in [6, 7, 8]:
                    print(f"   ‚ùå PROBLEMA: Respuesta gen√©rica repetitiva")
                elif "√°rea del derecho" in bot_response and i == 16:
                    print(f"   ‚ùå PROBLEMA: Pregunta √°rea dos veces")
                
            else:
                print(f"   ‚ùå Error HTTP: {response.status_code}")
                print(f"   üìÑ Respuesta: {response.text}")
                
        except Exception as e:
            print(f"   ‚ùå Error de conexi√≥n: {e}")
        
        time.sleep(0.5)
    
    print("\n" + "=" * 50)
    print("üìä RESUMEN DE MEJORAS")
    print("=" * 50)
    
    print("‚úÖ Mejoras implementadas:")
    print("   1. Detecci√≥n mejorada de intenciones de citas")
    print("   2. Flujo de conversaci√≥n m√°s directo")
    print("   3. Validaci√≥n de datos mejorada")
    print("   4. Eliminaci√≥n de respuestas repetitivas")
    print("   5. Detecci√≥n autom√°tica del tipo de consulta")
    print("   6. Fechas √∫nicas para cada opci√≥n")
    
    print("\nüéØ Problemas corregidos:")
    print("   ‚Ä¢ Respuestas repetitivas a 'si'")
    print("   ‚Ä¢ Pregunta duplicada sobre √°rea del derecho")
    print("   ‚Ä¢ Validaci√≥n de tel√©fono vs email")
    print("   ‚Ä¢ Fechas id√©nticas en opciones")
    print("   ‚Ä¢ Flujo de conversaci√≥n confuso")

if __name__ == "__main__":
    test_improved_conversation() 