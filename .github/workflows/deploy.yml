name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Job para verificar y preparar el despliegue
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Verify Backend
        working-directory: ./experimento-backend
        run: |
          npm ci
          npm run build
          echo "‚úÖ Backend build successful"

      - name: Verify Frontend
        working-directory: ./experimento-frontend
        run: |
          npm ci
          npm run build
          echo "‚úÖ Frontend build successful"

      - name: Verify Chatbot
        working-directory: ./experimento-chatbot
        run: |
          pip install -r requirements.txt
          python -c "import fastapi; print('‚úÖ Chatbot dependencies verified')"

      - name: Generate JWT Secret
        run: |
          JWT_SECRET=$(node -e "console.log(require('crypto').randomBytes(64).toString('hex'))")
          echo "JWT_SECRET=$JWT_SECRET" >> $GITHUB_ENV
          echo "‚úÖ JWT Secret generated"

  # Job para desplegar Backend (Render)
  deploy-backend:
    needs: prepare
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Render
        env:
          RENDER_TOKEN: ${{ secrets.RENDER_TOKEN }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_BACKEND_SERVICE_ID }}
        run: |
          echo "üöÄ Deploying Backend to Render..."
          curl -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
            -H "Authorization: Bearer $RENDER_TOKEN" \
            -H "Content-Type: application/json"
          echo "‚úÖ Backend deployment triggered"

  # Job para desplegar Chatbot (Render)
  deploy-chatbot:
    needs: prepare
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Render
        env:
          RENDER_TOKEN: ${{ secrets.RENDER_TOKEN }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_CHATBOT_SERVICE_ID }}
        run: |
          echo "ü§ñ Deploying Chatbot to Render..."
          curl -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
            -H "Authorization: Bearer $RENDER_TOKEN" \
            -H "Content-Type: application/json"
          echo "‚úÖ Chatbot deployment triggered"

  # Job para desplegar Frontend (Vercel)
  deploy-frontend:
    needs: prepare
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./experimento-frontend
          vercel-args: '--prod'

  # Job para verificar el despliegue
  verify-deployment:
    needs: [deploy-backend, deploy-chatbot, deploy-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Wait for deployment
        run: |
          echo "‚è≥ Waiting for services to be ready..."
          sleep 120

      - name: Verify Backend Health
        run: |
          echo "üîç Verifying Backend health..."
          curl -f ${{ secrets.BACKEND_URL }}/health || echo "‚ùå Backend health check failed"

      - name: Verify Chatbot Health
        run: |
          echo "üîç Verifying Chatbot health..."
          curl -f ${{ secrets.CHATBOT_URL }}/health || echo "‚ùå Chatbot health check failed"

      - name: Verify Frontend
        run: |
          echo "üîç Verifying Frontend..."
          curl -f ${{ secrets.FRONTEND_URL }} || echo "‚ùå Frontend check failed"

      - name: Deployment Summary
        run: |
          echo "üéâ Deployment Summary:"
          echo "Backend: ${{ secrets.BACKEND_URL }}"
          echo "Chatbot: ${{ secrets.CHATBOT_URL }}"
          echo "Frontend: ${{ secrets.FRONTEND_URL }}" 