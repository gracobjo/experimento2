import requests
import json
import time

def test_validations():
    """Probar todas las validaciones del chatbot"""
    base_url = "http://localhost:8000"
    
    print("üß™ Probando validaciones del chatbot...\n")
    
    # Test 1: Validaci√≥n de nombre
    print("1Ô∏è‚É£ Probando validaci√≥n de nombre...")
    test_cases_name = [
        ("j", "Nombre muy corto"),
        ("Juan", "Sin apellido"),
        ("123", "N√∫meros"),
        ("Juan@Perez", "Caracteres especiales"),
        ("Juan P√©rez L√≥pez", "Nombre v√°lido"),
        ("Mar√≠a Jos√© Garc√≠a", "Nombre con acentos"),
    ]
    
    for test_input, description in test_cases_name:
        print(f"\n   Prueba: {description} - '{test_input}'")
        response = requests.post(f"{base_url}/chat", json={
            "text": "cita",
            "language": "es",
            "user_id": f"test_name_{hash(test_input)}"
        })
        
        # Enviar el nombre a probar
        response = requests.post(f"{base_url}/chat", json={
            "text": test_input,
            "language": "es",
            "user_id": f"test_name_{hash(test_input)}"
        })
        
        response_text = response.json()['response']
        print(f"   Respuesta: {response_text[:100]}...")
        
        if "‚ùå" in response_text:
            print(f"   ‚úÖ Validaci√≥n funcionando (rechaz√≥ entrada inv√°lida)")
        else:
            print(f"   ‚ö†Ô∏è  Posible problema (acept√≥ entrada que deber√≠a ser inv√°lida)")
    
    # Test 2: Validaci√≥n de edad
    print("\n\n2Ô∏è‚É£ Probando validaci√≥n de edad...")
    test_cases_age = [
        ("15", "Menor de edad"),
        ("abc", "No es n√∫mero"),
        ("0", "Edad cero"),
        ("150", "Edad muy alta"),
        ("25", "Edad v√°lida"),
        ("18", "Edad m√≠nima"),
    ]
    
    for test_input, description in test_cases_age:
        print(f"\n   Prueba: {description} - '{test_input}'")
        
        # Iniciar conversaci√≥n
        user_id = f"test_age_{hash(test_input)}"
        requests.post(f"{base_url}/chat", json={
            "text": "cita",
            "language": "es",
            "user_id": user_id
        })
        
        # Pasar nombre v√°lido
        requests.post(f"{base_url}/chat", json={
            "text": "Juan P√©rez L√≥pez",
            "language": "es",
            "user_id": user_id
        })
        
        # Probar edad
        response = requests.post(f"{base_url}/chat", json={
            "text": test_input,
            "language": "es",
            "user_id": user_id
        })
        
        response_text = response.json()['response']
        print(f"   Respuesta: {response_text[:100]}...")
        
        if "‚ùå" in response_text:
            print(f"   ‚úÖ Validaci√≥n funcionando (rechaz√≥ edad inv√°lida)")
        else:
            print(f"   ‚ö†Ô∏è  Posible problema (acept√≥ edad que deber√≠a ser inv√°lida)")
    
    # Test 3: Validaci√≥n de tel√©fono
    print("\n\n3Ô∏è‚É£ Probando validaci√≥n de tel√©fono...")
    test_cases_phone = [
        ("123", "Muy corto"),
        ("abcdef", "Letras"),
        ("1234567890123456", "Muy largo"),
        ("612345678", "V√°lido"),
        ("612-345-678", "Con guiones"),
        ("(612) 345-678", "Con par√©ntesis"),
    ]
    
    for test_input, description in test_cases_phone:
        print(f"\n   Prueba: {description} - '{test_input}'")
        
        # Iniciar conversaci√≥n y pasar datos v√°lidos
        user_id = f"test_phone_{hash(test_input)}"
        requests.post(f"{base_url}/chat", json={
            "text": "cita",
            "language": "es",
            "user_id": user_id
        })
        requests.post(f"{base_url}/chat", json={
            "text": "Juan P√©rez L√≥pez",
            "language": "es",
            "user_id": user_id
        })
        requests.post(f"{base_url}/chat", json={
            "text": "25",
            "language": "es",
            "user_id": user_id
        })
        
        # Probar tel√©fono
        response = requests.post(f"{base_url}/chat", json={
            "text": test_input,
            "language": "es",
            "user_id": user_id
        })
        
        response_text = response.json()['response']
        print(f"   Respuesta: {response_text[:100]}...")
        
        if "‚ùå" in response_text:
            print(f"   ‚úÖ Validaci√≥n funcionando (rechaz√≥ tel√©fono inv√°lido)")
        else:
            print(f"   ‚ö†Ô∏è  Posible problema (acept√≥ tel√©fono que deber√≠a ser inv√°lido)")
    
    # Test 4: Validaci√≥n de email
    print("\n\n4Ô∏è‚É£ Probando validaci√≥n de email...")
    test_cases_email = [
        ("abc", "Muy corto"),
        ("usuario", "Sin @"),
        ("usuario@", "Sin dominio"),
        ("@dominio.com", "Sin usuario"),
        ("usuario@dominio", "Sin extensi√≥n"),
        ("usuario@dominio.com", "V√°lido"),
        ("usuario.test@dominio.co.uk", "V√°lido complejo"),
    ]
    
    for test_input, description in test_cases_email:
        print(f"\n   Prueba: {description} - '{test_input}'")
        
        # Iniciar conversaci√≥n y pasar datos v√°lidos
        user_id = f"test_email_{hash(test_input)}"
        requests.post(f"{base_url}/chat", json={
            "text": "cita",
            "language": "es",
            "user_id": user_id
        })
        requests.post(f"{base_url}/chat", json={
            "text": "Juan P√©rez L√≥pez",
            "language": "es",
            "user_id": user_id
        })
        requests.post(f"{base_url}/chat", json={
            "text": "25",
            "language": "es",
            "user_id": user_id
        })
        requests.post(f"{base_url}/chat", json={
            "text": "612345678",
            "language": "es",
            "user_id": user_id
        })
        
        # Probar email
        response = requests.post(f"{base_url}/chat", json={
            "text": test_input,
            "language": "es",
            "user_id": user_id
        })
        
        response_text = response.json()['response']
        print(f"   Respuesta: {response_text[:100]}...")
        
        if "‚ùå" in response_text:
            print(f"   ‚úÖ Validaci√≥n funcionando (rechaz√≥ email inv√°lido)")
        else:
            print(f"   ‚ö†Ô∏è  Posible problema (acept√≥ email que deber√≠a ser inv√°lido)")
    
    # Test 5: Validaci√≥n de motivo
    print("\n\n5Ô∏è‚É£ Probando validaci√≥n de motivo...")
    test_cases_reason = [
        ("abc", "Muy corto"),
        ("aaa", "Caracteres repetidos"),
        ("123", "Solo n√∫meros"),
        ("problema laboral", "V√°lido"),
        ("despido injustificado", "V√°lido largo"),
    ]
    
    for test_input, description in test_cases_reason:
        print(f"\n   Prueba: {description} - '{test_input}'")
        
        # Iniciar conversaci√≥n y pasar datos v√°lidos
        user_id = f"test_reason_{hash(test_input)}"
        requests.post(f"{base_url}/chat", json={
            "text": "cita",
            "language": "es",
            "user_id": user_id
        })
        requests.post(f"{base_url}/chat", json={
            "text": "Juan P√©rez L√≥pez",
            "language": "es",
            "user_id": user_id
        })
        requests.post(f"{base_url}/chat", json={
            "text": "25",
            "language": "es",
            "user_id": user_id
        })
        requests.post(f"{base_url}/chat", json={
            "text": "612345678",
            "language": "es",
            "user_id": user_id
        })
        requests.post(f"{base_url}/chat", json={
            "text": "usuario@email.com",
            "language": "es",
            "user_id": user_id
        })
        
        # Probar motivo
        response = requests.post(f"{base_url}/chat", json={
            "text": test_input,
            "language": "es",
            "user_id": user_id
        })
        
        response_text = response.json()['response']
        print(f"   Respuesta: {response_text[:100]}...")
        
        if "‚ùå" in response_text:
            print(f"   ‚úÖ Validaci√≥n funcionando (rechaz√≥ motivo inv√°lido)")
        else:
            print(f"   ‚ö†Ô∏è  Posible problema (acept√≥ motivo que deber√≠a ser inv√°lido)")

def test_complete_valid_flow():
    """Probar un flujo completo con datos v√°lidos"""
    base_url = "http://localhost:8000"
    
    print("\n\n" + "="*60)
    print("üéØ Probando flujo completo con datos v√°lidos...\n")
    
    user_id = "test_valid_flow"
    
    # Flujo completo con datos v√°lidos
    valid_data = [
        ("cita", "Solicitar cita"),
        ("Juan P√©rez L√≥pez", "Nombre v√°lido"),
        ("25", "Edad v√°lida"),
        ("612345678", "Tel√©fono v√°lido"),
        ("juan.perez@email.com", "Email v√°lido"),
        ("problema laboral con despido injustificado", "Motivo v√°lido"),
        ("1", "Seleccionar fecha"),
        ("s√≠", "Confirmar cita"),
    ]
    
    for i, (data, description) in enumerate(valid_data, 1):
        print(f"{i}Ô∏è‚É£ {description}: '{data}'")
        response = requests.post(f"{base_url}/chat", json={
            "text": data,
            "language": "es",
            "user_id": user_id
        })
        
        response_text = response.json()['response']
        print(f"   Respuesta: {response_text[:150]}...")
        
        if "‚ùå" in response_text:
            print(f"   ‚ùå ERROR: Validaci√≥n rechaz√≥ datos v√°lidos!")
        elif "üéâ" in response_text:
            print(f"   ‚úÖ √âXITO: Cita confirmada correctamente!")
        else:
            print(f"   ‚úÖ Continuando...")
        
        time.sleep(0.5)

if __name__ == "__main__":
    test_validations()
    test_complete_valid_flow() 